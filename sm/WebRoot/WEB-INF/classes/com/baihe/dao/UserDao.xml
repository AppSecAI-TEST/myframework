<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "../mybatis-3-mapper.dtd">
<mapper namespace="com.baihe.dao.UserDao">
	<cache />


	<select id="getPage" parameterType="Map" resultType="User">
		select *
		from user limit #{start}, #{pageSize}
	</select>

	<select id="getCount" resultType="long">
		select count(*) from user
	</select>

	<select id="getAll" resultType="User">
		select * from user
	</select>

	<select id="findAnd" parameterType="User" resultType="User">
		select * from user
		<where>
			<if test="username != null and username != ''">and username=#{username}</if>
			<if test="password != null and password != ''">and password =#{password}</if>
		</where>
	</select>

	<select id="findOr" parameterType="User" resultType="User">
		select * from user
		<where>
			<if test="username != null and username != ''">or username=#{username}</if>
			<if test="password != null and password != ''">or password =#{password}</if>
		</where>
	</select>

	<select id="findLikeAnd" parameterType="User" resultType="User">
		select * from user
		<where>
			<if test="username != null and username != ''">and username like concat('%', #{username}, '%')</if>
			<if test="password != null and password != ''">and password like concat('%', #{password}, '%')</if>
		</where>
	</select>

	<select id="findLikeOr" parameterType="User" resultType="User">
		select * from user
		<where>
			<if test="username != null and username != ''">or username like concat('%', #{username}, '%')</if>
			<if test="password != null and password != ''">or password like concat('%', #{password}, '%')</if>
		</where>
	</select>

	<select id="get" parameterType="long" resultType="User">
		select * from
		user where id = #{id}
	</select>

	<insert id="insert" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		insert into user (username, password) values
		<foreach item="item" collection="list" separator=",">
			(#{item.username}, #{item.password})
		</foreach>
	</insert>

	<update id="update" parameterType="User">
		update user set id = #{id},
		username = #{username},
		password = #{password}
		where id = #{id}
	</update>

	<delete id="delete" parameterType="long">
		delete from user where id in
		<foreach item="id" index="index" collection="list" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>